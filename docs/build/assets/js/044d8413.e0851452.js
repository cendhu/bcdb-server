"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8290],{3905:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(r),m=o,g=p["".concat(c,".").concat(m)]||p[m]||u[m]||i;return r?n.createElement(g,a(a({ref:t},d),{},{components:r})):n.createElement(g,a({ref:t},d))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},3534:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return d},default:function(){return p}});var n=r(7462),o=r(3366),i=(r(7294),r(3905)),a=["components"],l={id:"docker",title:"Orion Docker"},c=void 0,s={unversionedId:"external/getting-started/launching-one-node/docker",id:"external/getting-started/launching-one-node/docker",isDocsHomePage:!1,title:"Orion Docker",description:"\x3c!--",source:"@site/docs/external/getting-started/launching-one-node/docker.md",sourceDirName:"external/getting-started/launching-one-node",slug:"/external/getting-started/launching-one-node/docker",permalink:"/orion-server/docs/external/getting-started/launching-one-node/docker",tags:[],version:"current",frontMatter:{id:"docker",title:"Orion Docker"},sidebar:"Documentation",previous:{title:"Orion Executable",permalink:"/orion-server/docs/external/getting-started/launching-one-node/binary"},next:{title:"Creating Crypto Material",permalink:"/orion-server/docs/external/getting-started/launching-one-node/crypto-materials"}},d=[{value:"Prerequisites",id:"prerequisites",children:[],level:3},{value:"Build",id:"build",children:[],level:3},{value:"Start Orion in a Docker Container",id:"start-orion-in-a-docker-container",children:[],level:3}],u={toc:d};function p(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("p",null,"To build a docker image, the following are the prerequisites which should be installed."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Docker"),": To generate cryptographic materials and build BCDB image."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Git"),": To clone the code repository.")),(0,i.kt)("h3",{id:"build"},"Build"),(0,i.kt)("p",null,"To build the docer image, the following steps need to be executed:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"To clone the repository, first, create required directories using the command ",(0,i.kt)("inlineCode",{parentName:"li"},"mkdir -p github.com/hyperledger-labs")),(0,i.kt)("li",{parentName:"ol"},"Change the current working directory to the above created folder by issing the command ",(0,i.kt)("inlineCode",{parentName:"li"},"cd github.com/hyperledger-labs")),(0,i.kt)("li",{parentName:"ol"},"Clone this repository with ",(0,i.kt)("inlineCode",{parentName:"li"},"git clone https://github.com/hyperledger-labs/orion-server")),(0,i.kt)("li",{parentName:"ol"},"Change the current working directory to the repository root directory by issuing ",(0,i.kt)("inlineCode",{parentName:"li"},"cd orion-server")),(0,i.kt)("li",{parentName:"ol"},"To build the docker images, issue the command ",(0,i.kt)("inlineCode",{parentName:"li"},"make docker")," which will create a docker image named ",(0,i.kt)("inlineCode",{parentName:"li"},"orion-server"))),(0,i.kt)("h3",{id:"start-orion-in-a-docker-container"},"Start Orion in a Docker Container"),(0,i.kt)("p",null,"Before starting the container, we need to create cryptographic materials needed to run the Orion.  To create a minimal set of cryptographic materials, execute the ",(0,i.kt)("inlineCode",{parentName:"p"},"cryptoGen.sh")," script as shown below."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"./scripts/cryptoGen.sh sampleconfig\n")),(0,i.kt)("p",null,"Please note that ",(0,i.kt)("inlineCode",{parentName:"p"},"samplconfig")," folder already contains multiple configuration files used to build Orion docker images."),(0,i.kt)("p",null,"To start the orion server docker container, issue the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"docker run -it --rm -v $(pwd)/sampleconfig/:/etc/orion-server -p 6001:6001 -p 7050:7050 orion-server\n")))}p.isMDXComponent=!0}}]);